{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","step","apiKey","kronosEmail","kronosPassword","month","datas","sums","proj","acc","playlist","projreg","loadingConnect","loadingWorks","connectError","fetchError","event","setState","objectSpread","target","value","_this2","fetch","method","headers","Content-Type","Referer","body","JSON","stringify","email","password","then","response","json","data","flash","error","user","api_key","finally","_this3","startDate","moment","endDate","endOf","concat","format","replace","X-API-Key","tasks","volunteers","Set","forEach","task","add","firstname","lastname","volunteer","_volunteer$split","split","_volunteer$split2","toArray","slice","works","join","activity","name","fr","push","args","length","columnDelimiter","lineDelimiter","keys","result","item","ctr","key","arg","csv","convertArrayOfObjectsToCSV","match","encodeURI","link","document","createElement","setAttribute","click","_this4","react_default","a","Navbar_default","bg","variant","Brand","href","Toggle","Collapse","className","Text","Container_default","Row_default","Col_default","Alert_default","Form_default","Group","controlId","Label","Control","type","onChange","emailChange","bind","passwordChange","Button_default","onClick","getApiKey","disabled","index_es","icon","faSpinner","spin","es","selected","dateFormat","showMonthYearPicker","handleChangeMonth","fetchTasks","downloadCSV","Table_default","striped","bordered","hover","map","React","Component","Boolean","window","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b24141c6.chunk.js","sourcesContent":["import React from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport DatePicker from 'react-datepicker'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\n\nimport moment from 'moment'\n\nimport 'whatwg-fetch'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport default class App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      step: 0,\n      apiKey: null,\n      kronosEmail: '',\n      kronosPassword: '',\n      month: null,\n      datas: [],\n      sums: {\n        proj: 0,\n        acc: 0,\n        playlist: 0,\n        projreg: 0\n      },\n      loadingConnect: false,\n      loadingWorks: false,\n      connectError: null,\n      fetchError: null\n    }\n  }\n\n  emailChange(event){\n    this.setState({...this.state, kronosEmail: event.target.value})\n  }\n  passwordChange(event){\n    this.setState({...this.state, kronosPassword: event.target.value})\n  }\n\n  getApiKey() {\n    this.setState({\n      ...this.state,\n      loadingConnect: true,\n      connectError: null\n    }, () => \n      fetch('https://api-kronos.ticketack.com/kuser/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Referer': 'https://kronos.ticketack.com/'\n        },\n        body: JSON.stringify({\n          email: this.state.kronosEmail,\n          password: this.state.kronosPassword\n        })\n      }).then(response => response.json())\n        .then(data => {\n          if(data.flash.error){\n            this.setState({\n              ...this.state,\n              connectError: data.flash.error\n            })\n          } else {\n            this.setState({\n              ...this.state,\n              step: 1,\n              apiKey: data.user.api_key\n            })\n          }\n        })\n        .finally(() => {\n          this.setState({\n            ...this.state,\n            loadingConnect: false\n          })\n        })\n    )\n  }\n\n  handleChangeMonth(month) {\n    this.setState({\n      ...this.state,\n      month\n    })\n  }\n\n  fetchTasks () {\n    const startDate = moment(this.state.month)\n    const endDate = moment(this.state.month).endOf('month')\n    this.setState({\n      ...this.state,\n      loadingWorks: true,\n      fetchError: null\n    }, () => \n      fetch(`https://api-kronos.ticketack.com/task/list?start_at_gte=${startDate.format(\"YY-MM-DDTHH:mm:ssZ\").replace('+', '%2B')}&start_at_lte=${endDate.format(\"YYYY-MM-DDTHH:mm:ssZ\").replace('+', '%2B')}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Referer': 'https://kronos.ticketack.com/',\n          'X-API-Key': this.state.apiKey\n        }\n      }).then(response => response.json())\n        .then(data => {\n          if(data.flash.error){\n            this.setState({\n              ...this.state,\n              fetchError: data.flash.error\n            })\n          } else {\n            const { tasks } = data\n            const volunteers = new Set()\n            tasks.forEach(task => {\n              if(task.user)\n                volunteers.add(`${task.user.firstname} ${task.user.lastname}`)\n            })\n\n            const datas = []\n            const sums = {\n              proj: 0,\n              acc: 0,\n              playlist: 0,\n              projreg: 0\n            }\n\n            volunteers.forEach(volunteer => {\n              const [firstname, ...lastname] = volunteer.split(' ')\n              const works = {\n                proj: 0,\n                acc: 0,\n                playlist: 0,\n                projreg: 0\n              }\n              tasks.forEach(task => {\n                if(task.user && task.user.firstname === firstname && task.user.lastname === lastname.join(' ')){\n                  if(task.activity.name.fr === 'Accueil/billetterie'){\n                    works.acc++\n                    sums.acc++\n                  }\n                  if(task.activity.name.fr === 'Projectionniste'){\n                    works.proj++\n                    sums.proj++\n                  }\n                  if(task.activity.name.fr === 'Projectionniste-régisseur'){\n                    works.projreg++\n                    sums.projreg++\n                  }\n                  if(task.activity.name.fr === 'Playlister'){\n                    works.playlist += 3\n                    sums.playlist += 3\n                  }\n                }\n              })\n\n              datas.push({\n                volunteer,\n                proj: works.proj,\n                acc: works.acc,\n                projreg: works.projreg,\n                playlist: works.playlist\n              })\n            })\n            this.setState({\n              ...this.state,\n              step: 2,\n              datas,\n              sums\n            })\n          }\n        })\n        .finally(() => this.setState({\n          ...this.state,\n          loadingWorks: false\n        }))\n    )\n  }\n\n  convertArrayOfObjectsToCSV(args) {  \n    const data = args.data || null;\n    if (data == null || !data.length) {\n        return null\n    }\n\n    const columnDelimiter = args.columnDelimiter || ','\n    const lineDelimiter = args.lineDelimiter || '\\n'\n\n    const keys = Object.keys(data[0])\n\n    let result = ''\n    result += keys.join(columnDelimiter)\n    result += lineDelimiter\n\n    data.forEach(function(item) {\n        let ctr = 0\n        keys.forEach(function(key) {\n            if (ctr > 0) result += columnDelimiter\n\n            result += item[key]\n            ctr++\n        });\n        result += lineDelimiter\n    })\n\n    return result\n  }\n\n  downloadCSV(arg) {  \n    let csv = this.convertArrayOfObjectsToCSV({ data: arg })\n    if (csv == null) return\n\n    const filename = 'volunteer-data.csv'\n\n    if (!csv.match(/^data:text\\/csv/i)) {\n        csv = 'data:text/csv;charset=utf-8,' + csv\n    }\n    const data = encodeURI(csv)\n\n    const link = document.createElement('a')\n    link.setAttribute('href', data)\n    link.setAttribute('download', filename)\n    link.click()\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar bg='dark' variant='dark'>\n          <Navbar.Brand href=\"#home\">Kronos Volunteer Fetcher</Navbar.Brand>\n          <Navbar.Toggle />\n          <Navbar.Collapse className='justify-content-end'>\n            <Navbar.Text>\n              Cinémajoie\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container className='mt-4'>\n          <Row>\n            <Col>\n              {\n                this.state.step >= 0 && (\n                  <div>\n                    <Row>\n                      <h3>1. Récupérer la clé d'API</h3>\n                    </Row>\n                    <Row>\n                      {\n                        this.state.connectError != null && (\n                          <Alert variant='danger'>\n                            {this.state.connectError}\n                          </Alert>\n                        )\n                      }\n                      <Form>\n                        <Form.Group controlId='kronos-connect-email'>\n                          <Form.Label>Adresse email Kronos</Form.Label>\n                          <Form.Control type='email' onChange={this.emailChange.bind(this)} />\n                        </Form.Group>\n\n                        <Form.Group controlId='kronos-connect-password'>\n                          <Form.Label>Mot de passe Kronos</Form.Label>\n                          <Form.Control type='password' onChange={this.passwordChange.bind(this)} />\n                        </Form.Group>\n                        <Button variant='primary' onClick={this.getApiKey.bind(this)} disabled={this.state.loadingConnect}>\n                          {\n                            this.state.loadingConnect ? (<FontAwesomeIcon icon={faSpinner} spin />) : ('Se connecter')\n                          }\n                        </Button>\n                      </Form>\n                    </Row>\n                  </div>\n                )\n              }\n            </Col>\n            <Col>\n              {\n                this.state.step >= 1 && (\n                  <div>\n                    <Row>\n                      <h3>2. Sélection du mois</h3>\n                    </Row>\n                    <Row>\n                      {\n                        this.state.fetchError != null && (\n                          <Alert variant='danger'>\n                            {this.state.fetchError}\n                          </Alert>\n                        )\n                      }\n                      <Form>\n                        <Form.Group controlId='fetch-date-start'>\n                          <Form.Label>Sélectionner le mois</Form.Label><br />\n                          <DatePicker\n                            selected={this.state.month}\n                            dateFormat=\"MM/yyyy\"\n                            showMonthYearPicker\n                            onChange={this.handleChangeMonth.bind(this)}\n                          />\n                        </Form.Group>\n                        <Button variant='primary' onClick={this.fetchTasks.bind(this)} disabled={this.state.loadingWorks}>\n                          {\n                            this.state.loadingWorks ? (<FontAwesomeIcon icon={faSpinner} spin />) : ('Récupérer les bénévoles')\n                          }\n                        </Button>\n                      </Form>\n                    </Row>\n                  </div>\n                )\n              }\n            </Col>\n          </Row>\n          {\n            this.state.step >= 2 && (\n              <div className='mt-4'>\n                <Row>\n                  <h3>3. Affichage des données <Button onClick={() => this.downloadCSV(this.state.datas)}>Exporter en CSV</Button></h3>\n                </Row>\n                <Row>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Bénévole</th>\n                        <th>Accueil/billetterie</th>\n                        <th>Projection</th>\n                        <th>Projection - Régie</th>\n                        <th>Playlist</th>\n                        <th>Billets</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        this.state.datas.length > 0 && this.state.datas.map(data => (\n                          <tr>\n                            <td>{data.volunteer}</td>\n                            <td>{data.acc > 0 ? data.acc : '-'}</td>\n                            <td>{data.proj > 0 ? data.proj : '-'}</td>\n                            <td>{data.projreg > 0 ? data.projreg : '-'}</td>\n                            <td>{data.playlist > 0 ? data.playlist : '-'}</td>\n                            <td>{data.acc + data.proj + data.projreg + data.playlist}</td>\n                          </tr>\n                        ))\n                      }\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td><b>Totaux</b></td>\n                        <td>{this.state.sums.acc}</td>\n                        <td>{this.state.sums.proj}</td>\n                        <td>{this.state.sums.projreg}</td>\n                        <td>{this.state.sums.playlist}</td>\n                        <td>{this.state.sums.acc + this.state.sums.proj + this.state.sums.projreg + this.state.sums.playlist}</td>\n                      </tr>\n                    </tfoot>\n                  </Table>\n                </Row>\n              </div>\n            )\n          }\n        </Container>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}